asm("
softint_handler:
    push %r1 // needed by wait
    push %r24 // static position
    set static, %r24

    // wait syscall
    cmp %r1, 7
    be pwm_handler_do_it

    // args
    push %r3
    push %r2
    push %r1

    push %r28
    call f_softint_handler
    pop %r28

    add %sp, 3, %sp
    pop %r24
    add %sp, 1, %sp // drop %r1
    reti
")

export int softint_handler(int r1, int r2, int r3) {
    if(r1 == 0) {
        _panic(r2);
    }
    else if(r1 == 1) {
        _start_process((void*)r2, (char*)r3);
    }
    else if(r1 == 2) {
        _kill_process(r2);
    }
    else if(r1 == 3) {
        return (int)_malloc(r2);
    }
    else if(r1 == 4) {
        return _free((void*)r2);
    }
    else if(r1 == 5) {
        return (int)_realloc((void*)r2, r3);
    }
    else if(r1 == 6) {
        return (int)_processes_info((int*)r2);
    }
    // r1 == 7 unreachable
    else if(r1 == 8) {
        _kill_process(process_table.current_process);
    }
}

